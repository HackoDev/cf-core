# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-10-16 14:49
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import easy_thumbnails.fields
import model_utils.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField(default=0, help_text='используется для сортировки', verbose_name='позиция')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(default='', max_length=526, verbose_name='телефон')),
                ('address', models.CharField(default='', max_length=1024, verbose_name='текст')),
                ('lat', models.FloatField(default=0, verbose_name='широта')),
                ('lng', models.FloatField(default=0, verbose_name='долгота')),
            ],
            options={
                'verbose_name_plural': 'адреса и контакты филиалов',
                'ordering': ('-position',),
                'verbose_name': 'адреса и контакты филиалов',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024, verbose_name='название')),
                ('position', models.PositiveIntegerField(default=0, verbose_name='позиция')),
            ],
            options={
                'verbose_name_plural': 'местоположения',
                'ordering': ('position',),
                'verbose_name': 'местоположение',
            },
        ),
        migrations.CreateModel(
            name='ModerationNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('object_id', models.PositiveIntegerField(verbose_name='id объекта')),
                ('is_available', models.NullBooleanField(choices=[(None, 'Ожидает проверки'), (True, 'Разрешено'), (False, 'Отклонено')], default=None, verbose_name='опубликован')),
                ('last_seen', models.DateTimeField(default=None, null=True, verbose_name='последний просмотр')),
                ('note', models.TextField(default='', verbose_name='заметка')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType', verbose_name='тип объекта')),
            ],
            options={
                'verbose_name_plural': 'записи по модерации',
                'ordering': ['-created'],
                'verbose_name': 'запись по модерации',
            },
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField(default=0, help_text='используется для сортировки', verbose_name='позиция')),
                ('base_type', models.CharField(choices=[('regular', 'обычный'), ('info', 'информационный')], default='regular', max_length=16, verbose_name='тип партнера')),
                ('name', models.CharField(default='', max_length=128, verbose_name='название')),
                ('icon', models.ImageField(upload_to='partners/', verbose_name='иконка')),
            ],
            options={
                'verbose_name_plural': 'партнеры',
                'ordering': ('-position',),
                'verbose_name': 'партнер',
            },
        ),
        migrations.CreateModel(
            name='ServiceRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField(default=0, help_text='используется для сортировки', verbose_name='позиция')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('text', models.CharField(default='', max_length=128, verbose_name='рекст')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_rules', to='cf_core.ServiceRule', verbose_name='родитель')),
            ],
            options={
                'verbose_name_plural': 'правила сервиса',
                'ordering': ('-position',),
                'verbose_name': 'правило сервиса',
            },
        ),
        migrations.CreateModel(
            name='SliderImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField(default=0, help_text='используется для сортировки', verbose_name='позиция')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('image', easy_thumbnails.fields.ThumbnailerImageField(upload_to='sliders/', verbose_name='изображение')),
                ('width', models.PositiveIntegerField(default=0, help_text='При 0 не обрезается', verbose_name='ширина')),
                ('height', models.PositiveIntegerField(default=0, help_text='При 0 не обрезается', verbose_name='высота')),
                ('crop', models.BooleanField(default=False, verbose_name='использовть crop')),
            ],
            options={
                'verbose_name_plural': 'изображения для слайдера',
                'ordering': ('position',),
                'verbose_name': 'изображение для слайдера',
            },
        ),
        migrations.CreateModel(
            name='SocialLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField(default=0, help_text='используется для сортировки', verbose_name='позиция')),
                ('name', models.CharField(choices=[('vk', 'VK'), ('fb', 'Facebook'), ('tw', 'Twitter'), ('gplus', 'Google+'), ('youtube', 'Youtube'), ('instagram', 'Instagram')], default='', max_length=512, verbose_name='название')),
                ('url', models.URLField(default='', verbose_name='url')),
                ('icon', easy_thumbnails.fields.ThumbnailerField(upload_to='icons/social/', verbose_name='иконка')),
            ],
            options={
                'verbose_name_plural': 'ссылки на соц. сети',
                'ordering': ('position',),
                'verbose_name': 'ссылка на соц. сеть',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField(default=0, help_text='используется для сортировки', verbose_name='позиция')),
                ('name', models.CharField(default='', max_length=512, verbose_name='Статус')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='contenttypes.ContentType', verbose_name='тип объекта')),
            ],
            options={
                'verbose_name_plural': 'статус',
                'ordering': ('position',),
                'verbose_name': 'статус',
            },
        ),
    ]
